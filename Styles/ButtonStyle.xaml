<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Moderner Primärbutton  -->
    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="16,10" />
        <Setter Property="MinHeight" Value="38" />
        <Setter Property="Background" Value="{StaticResource ButtonDefaultBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Arrow" />
        <!--  Fokus-Visual komplett abschalten (keine graue Umrandung)  -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>

                        <!--  weicher Schatten  -->
                        <Border Background="Transparent" CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    Opacity="0.6"
                                    ShadowDepth="1.5"
                                    Color="#40000000" />
                            </Border.Effect>
                        </Border>

                        <!--  Grundfläche  -->
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10" />

                        <!--  zarte Top-Glanzkante  -->
                        <Border
                            CornerRadius="10"
                            IsHitTestVisible="False"
                            Opacity="0.45">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.00" Color="#66FFFFFF" />
                                    <GradientStop Offset="0.10" Color="#22FFFFFF" />
                                    <GradientStop Offset="0.25" Color="#00000000" />
                                    <GradientStop Offset="1.00" Color="#00000000" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>#FF000000</Border.Background>
                        </Border>

                        <!--  feiner Innen-/Außenrahmen  -->
                        <Border
                            Background="Transparent"
                            BorderBrush="#22000000"
                            BorderThickness="1"
                            CornerRadius="10" />
                        <Border
                            Margin="1"
                            Background="Transparent"
                            BorderBrush="#22FFFFFF"
                            BorderThickness="1"
                            CornerRadius="9" />

                        <!--  Inhalt  -->
                        <ContentPresenter
                            Margin="10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Grid>

                    <!--  Zustände  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="{StaticResource ButtonHoverBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="{StaticResource ButtonPressedBrush}" />
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.985" ScaleY="0.985" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Base" Property="Opacity" Value="0.55" />
                            <Setter Property="Foreground" Value="#88FFFFFF" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Für Kompatibilität: alter Schlüssel nutzt jetzt den neuen Look  -->
    <Style
        x:Key="NormalGuiButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="Button" />

    <SolidColorBrush x:Key="StrokeBrush" Color="#26FFFFFF" />

    <Style x:Key="EditCircleIconButton" TargetType="Button">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="ToolTip" Value="Rename" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!--  runder Hintergrund  -->
                        <Border
                            x:Name="circle"
                            Background="#1AFFFFFF"
                            BorderBrush="{StaticResource StrokeBrush}"
                            BorderThickness="1"
                            CornerRadius="16" />
                        <!--  dicker Pencil aus MDL2  -->
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            FontSize="18"
                            Foreground="White"
                            Text="&#xE70F;" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Background" Value="#28FFFFFF" />
                            <Setter TargetName="circle" Property="BorderBrush" Value="{DynamicResource ButtonDefaultBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Background" Value="#40FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="circle" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--  Danger/Cancel Button (wie PrimaryButton, aber rot)  -->
    <Style x:Key="CancelButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="16,10" />
        <Setter Property="MinHeight" Value="38" />
        <Setter Property="Background" Value="{StaticResource ButtonCancelBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root">
                        <!--  Schatten  -->
                        <Border Background="Transparent" CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    Opacity="0.6"
                                    ShadowDepth="1.5"
                                    Color="#40000000" />
                            </Border.Effect>
                        </Border>

                        <!--  Grundfläche  -->
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10" />

                        <!--  Glanzkante oben  -->
                        <Border
                            CornerRadius="10"
                            IsHitTestVisible="False"
                            Opacity="0.45">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.00" Color="#66FFFFFF" />
                                    <GradientStop Offset="0.10" Color="#22FFFFFF" />
                                    <GradientStop Offset="0.25" Color="#00000000" />
                                    <GradientStop Offset="1.00" Color="#00000000" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>#FF000000</Border.Background>
                        </Border>

                        <!--  feine Rahmen  -->
                        <Border
                            Background="Transparent"
                            BorderBrush="#22000000"
                            BorderThickness="1"
                            CornerRadius="10" />
                        <Border
                            Margin="1"
                            Background="Transparent"
                            BorderBrush="#22FFFFFF"
                            BorderThickness="1"
                            CornerRadius="9" />

                        <!--  Focus-Ring  -->
                        <Border
                            x:Name="FocusRing"
                            Margin="-2"
                            BorderBrush="#66FFFFFF"
                            BorderThickness="2"
                            CornerRadius="12"
                            Opacity="0" />

                        <ContentPresenter
                            Margin="10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Grid>

                    <!--  Zustände  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="{StaticResource ButtonCancelHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="{StaticResource ButtonCancelPressedBrush}" />
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.985" ScaleY="0.985" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Root" Property="RenderTransformOrigin" Value="0.5,0.5" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusRing" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Base" Property="Opacity" Value="0.55" />
                            <Setter Property="Foreground" Value="#88FFFFFF" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Farben  -->
    <SolidColorBrush x:Key="Btn.Primary1" Color="#5BC0FF" />
    <SolidColorBrush x:Key="Btn.Primary2" Color="#2B7DE3" />
    <SolidColorBrush x:Key="Btn.Glow" Color="#803BC8FF" />
    <SolidColorBrush x:Key="Btn.Text" Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="ButtonDefaultBrush" Color="{StaticResource ButtonDefaultColor}" />

    <!--  Start/Stop Monitoring Button  -->
    <!--  Start/Stop Monitoring Button  -->
    <Style x:Key="StartStopMonitoringButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="18,10" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Cursor" Value="Hand" />

        <!--  Background wie bei dir  -->
        <Setter Property="Background" Value="{DynamicResource ButtonDefaultBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!--  Schatten  -->
                        <Border Background="Transparent" CornerRadius="12">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="12"
                                    Opacity="0.9"
                                    ShadowDepth="2"
                                    Color="#22000000" />
                            </Border.Effect>
                        </Border>

                        <!--  Basisfläche: NUR die Farbe  -->
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            CornerRadius="12" />

                        <!--  Vignette-Overlay  -->
                        <Border CornerRadius="12" IsHitTestVisible="False">
                            <Border.OpacityMask>
                                <RadialGradientBrush Center="0.5,0.5" RadiusX="0.95" RadiusY="0.95">
                                    <GradientStop Offset="0.85" Color="#00FFFFFF" />
                                    <GradientStop Offset="1.00" Color="#55000000" />
                                </RadialGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>#FF000000</Border.Background>
                        </Border>

                        <!--  Top-Gloss  -->
                        <Border
                            CornerRadius="12"
                            IsHitTestVisible="False"
                            Opacity="0.5">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.00" Color="#66FFFFFF" />
                                    <GradientStop Offset="0.12" Color="#18FFFFFF" />
                                    <GradientStop Offset="0.40" Color="#00000000" />
                                    <GradientStop Offset="1.00" Color="#00000000" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>#FFFFFFFF</Border.Background>
                        </Border>

                        <!--  Neon Edge  -->
                        <Border
                            x:Name="NeonRing"
                            BorderBrush="#803BC8FF"
                            BorderThickness="1.4"
                            CornerRadius="12"
                            Opacity="0.0" />

                        <!--  Doppelrahmen  -->
                        <Border
                            BorderBrush="#26000000"
                            BorderThickness="1"
                            CornerRadius="12" />
                        <Border
                            Margin="1"
                            BorderBrush="#33FFFFFF"
                            BorderThickness="1"
                            CornerRadius="11" />

                        <!--  Sheen  -->
                        <Grid
                            x:Name="Sheen"
                            ClipToBounds="True"
                            IsHitTestVisible="False"
                            Opacity="0">
                            <Rectangle
                                Width="140"
                                Margin="-160,0,0,0"
                                HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#00FFFFFF" />
                                        <GradientStop Offset="0.5" Color="#55FFFFFF" />
                                        <GradientStop Offset="1" Color="#00FFFFFF" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <TranslateTransform x:Name="SheenTransform" X="0" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>

                        <!--  Inhalt  -->
                        <Grid
                            x:Name="ContentRoot"
                            Margin="14,6"
                            RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Path
                                x:Name="Icon"
                                Grid.Column="0"
                                Width="12"
                                Height="12"
                                VerticalAlignment="Center"
                                Data="M 0,0 L 0,12 L 10,6 Z"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Uniform" />

                            <ContentPresenter
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <!--  Triggers / Animationen  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="NeonRing" Property="Opacity" Value="1" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="1.03"
                                            Duration="0:0:0.12" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="1.03"
                                            Duration="0:0:0.12" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Sheen"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.25"
                                            Duration="0:0:0.10" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SheenTransform"
                                            Storyboard.TargetProperty="X"
                                            From="0"
                                            To="360"
                                            Duration="0:0:0.9" />
                                        <DoubleAnimation
                                            BeginTime="0:0:0.75"
                                            Storyboard.TargetName="Sheen"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.20" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="1"
                                            Duration="0:0:0.10" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="1"
                                            Duration="0:0:0.10" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Icon" Property="Opacity" Value="0.9" />
                            <Setter TargetName="Base" Property="Opacity" Value="0.93" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0.99"
                                            Duration="0:0:0.05" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0.98"
                                            Duration="0:0:0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="1"
                                            Duration="0:0:0.08" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Scale"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="1"
                                            Duration="0:0:0.08" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                            <Setter TargetName="NeonRing" Property="Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!--  Menu-Bar Button Style  -->
    <Style x:Key="MenuBarButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                To="{StaticResource ButtonHoverColor}"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                To="Transparent"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="EditProfileNameButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Cursor" Value="None" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuBarToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <!--  Wichtig: SolidColorBrush, damit ColorAnimation wirkt  -->
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Transparent" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Checked: Aktiv-Farbe  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDefaultBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonDefaultBrush}" />
                        </Trigger>

                        <!--  Hover-Animation (wie MenuBarButton)  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonHoverColor}"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                            To="Transparent"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  Steam-Farben  -->
    <SolidColorBrush x:Key="SteamButtonBaseBrush" Color="#2A475E" />
    <SolidColorBrush x:Key="SteamButtonHoverBrush" Color="#3B6A8E" />
    <SolidColorBrush x:Key="SteamButtonPressedBrush" Color="#1B2838" />

    <!--  Kompakter Steam-Startbutton (drängt nichts ab)  -->
    <Style
        x:Key="SteamPlayButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="Button">
        <!--  kompakter als PrimaryButton  -->
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="12,8" />
        <Setter Property="MinHeight" Value="34" />
        <Setter Property="Background" Value="{StaticResource SteamButtonBaseBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>

                        <!--  weicher Schatten  -->
                        <Border Background="Transparent" CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    Opacity="0.6"
                                    ShadowDepth="1.5"
                                    Color="#40000000" />
                            </Border.Effect>
                        </Border>

                        <!--  Grundfläche  -->
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10" />

                        <!--  zarte Top-Glanzkante  -->
                        <Border
                            CornerRadius="10"
                            IsHitTestVisible="False"
                            Opacity="0.45">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.00" Color="#66FFFFFF" />
                                    <GradientStop Offset="0.10" Color="#22FFFFFF" />
                                    <GradientStop Offset="0.25" Color="#00000000" />
                                    <GradientStop Offset="1.00" Color="#00000000" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>#FF000000</Border.Background>
                        </Border>

                        <!--  feiner Rahmen  -->
                        <Border
                            Background="Transparent"
                            BorderBrush="#22000000"
                            BorderThickness="1"
                            CornerRadius="10" />
                        <Border
                            Margin="1"
                            Background="Transparent"
                            BorderBrush="#22FFFFFF"
                            BorderThickness="1"
                            CornerRadius="9" />

                        <!--  Inhalt  -->
                        <ContentPresenter
                            Margin="10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="{StaticResource SteamButtonHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="{StaticResource SteamButtonPressedBrush}" />
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.985" ScaleY="0.985" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Base" Property="Opacity" Value="0.55" />
                            <Setter Property="Foreground" Value="#88FFFFFF" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Optional: noch schlankere Variante für ganz wenig Platz  -->
    <Style
        x:Key="SteamPlayButtonSlim"
        BasedOn="{StaticResource SteamPlayButton}"
        TargetType="Button">
        <Setter Property="FontSize" Value="12.5" />
        <Setter Property="Padding" Value="10,6" />
        <Setter Property="MinHeight" Value="30" />
    </Style>


</ResourceDictionary>