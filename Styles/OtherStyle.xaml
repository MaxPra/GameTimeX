<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="NoMouseOverButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"   >
                        <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChangeImageStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Cursor" Value="None"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox Palette -->
    <!-- TextBox Palette -->
    <Color x:Key="TextBoxBgColor">#505050</Color>
    <Color x:Key="TextBoxBorderColor">#6E6E6E</Color>
    <Color x:Key="TextBoxHoverBorderColor">#8C8C8C</Color>

    <SolidColorBrush x:Key="TextBoxBgBrush" Color="{StaticResource TextBoxBgColor}"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource TextBoxBorderColor}"/>
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource TextBoxHoverBorderColor}"/>

    <!-- Fokus: nimm die App-Akzentfarbe -->
    <SolidColorBrush x:Key="TextBoxFocusBorderBrush" Color="{StaticResource ButtonDefaultColor}"/>


    <!-- Compact, no-clip TextBox -->
    <Style x:Key="FormTextBox" TargetType="TextBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!-- kompakt -->
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Padding" Value="10,4"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="SelectionBrush" Value="{StaticResource ButtonDefaultBrush}"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="Base"
                            CornerRadius="8"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <!-- kein Margin -> kein Clipping -->
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"/>
                        </Border>

                        <!-- dezenter Focus-Glow -->
                        <Border x:Name="Glow"
                            CornerRadius="8"
                            BorderThickness="2"
                            BorderBrush="{StaticResource TextBoxFocusBorderBrush}"
                            Opacity="0"
                            IsHitTestVisible="False"/>

                        <!-- Placeholder aus Tag -->
                        <TextBlock x:Name="Watermark"
                               Text="{TemplateBinding Tag}"
                               Foreground="#A0FFFFFF"
                               Margin="{TemplateBinding Padding}"
                               IsHitTestVisible="False"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}"/>
                            <Setter TargetName="Glow" Property="Opacity" Value="0.35"/>
                        </Trigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="#585858"/>
                            <Setter Property="Opacity" Value="0.95"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SearchTextBox: FormTextBox-Basis + zentrierte Lupe + zentrierter Text -->
    <Style x:Key="SearchTextBox" TargetType="TextBox" BasedOn="{StaticResource FormTextBox}">
        <!-- gleiche Höhe wie übrige Controls -->
        <Setter Property="Height" Value="{StaticResource FormControlHeight}"/>
        <!-- wir steuern den Innenabstand im Template selbst -->
        <Setter Property="Padding" Value="0"/>
        <!-- damit der Text/Caret mittig sitzt -->
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid SnapsToDevicePixels="True">
                        <!-- Zwei Spalten: 34px Icon-Gutter + Inhalt -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="34"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Basis + Focus-Glow über beide Spalten -->
                        <Border x:Name="Base"
                            Grid.ColumnSpan="2"
                            CornerRadius="8"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="Glow"
                            Grid.ColumnSpan="2"
                            CornerRadius="8"
                            BorderThickness="2"
                            BorderBrush="{StaticResource TextBoxFocusBorderBrush}"
                            Opacity="0"
                            IsHitTestVisible="False"/>

                        <!-- Lupe (perfekt mittig im 34px-Gutter) -->
                        <Viewbox Grid.Column="0"
                             Width="16" Height="16"
                             Stretch="Uniform"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             IsHitTestVisible="False">
                            <Canvas Width="16" Height="16">
                                <Ellipse Canvas.Left="1" Canvas.Top="1"
                                     Width="10" Height="10"
                                     Stroke="#B0FFFFFF" StrokeThickness="2"/>
                                <Rectangle Width="6" Height="2" Fill="#B0FFFFFF"
                                       Canvas.Left="9" Canvas.Top="9">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="45"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Canvas>
                        </Viewbox>

                        <!-- Inhalt (Text/Caret) – vertikal zentriert -->
                        <ScrollViewer x:Name="PART_ContentHost"
                                  Grid.Column="1"
                                  Margin="0,0,28,0"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        <!-- Placeholder (aus Tag) -->
                        <TextBlock x:Name="Watermark"
                               Grid.Column="1"
                               Text="{TemplateBinding Tag}"
                               Foreground="#A0FFFFFF"
                               Margin="0,0,28,0"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"
                               IsHitTestVisible="False"/>
                    </Grid>

                    <!-- Zustände -->
                    <ControlTemplate.Triggers>
                        <!-- Placeholder nur zeigen, wenn leer & nicht fokussiert -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>

                        <!-- Hover/Fokus -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Base"  Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}"/>
                            <Setter TargetName="Glow"  Property="Opacity"     Value="0.45"/>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonDefaultBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="6,3"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="6"
                    Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>








    <BitmapImage x:Key="MyImageSource" UriSource="pack://application:,,,/../images/no_picture.png" />
    <BitmapImage x:Key="CreateNewImageSource" UriSource="pack://application:,,,/../images/create_new.png" />
    <BitmapImage x:Key="DeleteImageSource" UriSource="pack://application:,,,/../images/delete.png" />
    <BitmapImage x:Key="EditImageSource" UriSource="pack://application:,,,/../images/edit.png" />
</ResourceDictionary>