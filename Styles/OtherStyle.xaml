<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="NoMouseOverButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChangeImageStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Cursor" Value="None" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Color x:Key="TextBoxBgColor">#505050</Color>
    <Color x:Key="TextBoxBorderColor">#6E6E6E</Color>
    <Color x:Key="TextBoxHoverBorderColor">#8C8C8C</Color>

    <SolidColorBrush x:Key="TextBoxBgBrush" Color="{StaticResource TextBoxBgColor}" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource TextBoxBorderColor}" />
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource TextBoxHoverBorderColor}" />

    <SolidColorBrush x:Key="TextBoxFocusBorderBrush" Color="{StaticResource ButtonDefaultColor}" />

    <Style x:Key="FormTextBox" TargetType="TextBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource TextBoxBgBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="10,4" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="SelectionBrush" Value="{StaticResource ButtonDefaultBrush}" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid SnapsToDevicePixels="True">
                        <Border
                            x:Name="Base"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" />
                        </Border>

                        <Border
                            x:Name="Glow"
                            BorderBrush="{StaticResource TextBoxFocusBorderBrush}"
                            BorderThickness="2"
                            CornerRadius="8"
                            IsHitTestVisible="False"
                            Opacity="0" />

                        <TextBlock
                            x:Name="Watermark"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Center"
                            Foreground="#A0FFFFFF"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}"
                            Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}" />
                            <Setter TargetName="Glow" Property="Opacity" Value="0.35" />
                        </Trigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="Base" Property="Background" Value="#585858" />
                            <Setter Property="Opacity" Value="0.95" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SearchTextBox"
        BasedOn="{StaticResource FormTextBox}"
        TargetType="TextBox">
        <Setter Property="Height" Value="{StaticResource FormControlHeight}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="34" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="Base"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8" />
                        <Border
                            x:Name="Glow"
                            Grid.ColumnSpan="2"
                            BorderBrush="{StaticResource TextBoxFocusBorderBrush}"
                            BorderThickness="2"
                            CornerRadius="8"
                            IsHitTestVisible="False"
                            Opacity="0" />

                        <Viewbox
                            Grid.Column="0"
                            Width="16"
                            Height="16"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            IsHitTestVisible="False"
                            Stretch="Uniform">
                            <Canvas Width="16" Height="16">
                                <Ellipse
                                    Canvas.Left="1"
                                    Canvas.Top="1"
                                    Width="10"
                                    Height="10"
                                    Stroke="#B0FFFFFF"
                                    StrokeThickness="2" />
                                <Rectangle
                                    Canvas.Left="9"
                                    Canvas.Top="9"
                                    Width="6"
                                    Height="2"
                                    Fill="#B0FFFFFF">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Canvas>
                        </Viewbox>

                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Grid.Column="1"
                            Margin="0,0,28,0"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <TextBlock
                            x:Name="Watermark"
                            Grid.Column="1"
                            Margin="0,0,28,0"
                            VerticalAlignment="Center"
                            Foreground="#A0FFFFFF"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}"
                            Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}" />
                            <Setter TargetName="Glow" Property="Opacity" Value="0.45" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="#333333" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonDefaultBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid Header  -->
    <Style x:Key="SteamDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="#F0F0F0" />
        <Setter Property="Background" Value="#414141" />
        <Setter Property="BorderBrush" Value="#5A5A5A" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <!--  DataGrid Row  -->
    <Style x:Key="SteamDataGridRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2AFFFFFF" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#33289AFC" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DataGrid Cell  -->
    <Style x:Key="SteamDataGridCell" TargetType="DataGridCell">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="8,0,8,0" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DataGrid  -->
    <Style x:Key="SteamDataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="#20FFFFFF" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="RowHeight" Value="34" />
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="RowStyle" Value="{StaticResource SteamDataGridRow}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource SteamDataGridColumnHeader}" />
        <Setter Property="CellStyle" Value="{StaticResource SteamDataGridCell}" />
    </Style>

    <BitmapImage x:Key="MyImageSource" UriSource="pack://application:,,,/../images/no_picture.png" />
    <BitmapImage x:Key="CreateNewImageSource" UriSource="pack://application:,,,/../images/create_new.png" />
    <BitmapImage x:Key="DeleteImageSource" UriSource="pack://application:,,,/../images/delete.png" />
    <BitmapImage x:Key="EditImageSource" UriSource="pack://application:,,,/../images/edit.png" />


    <!--  Card-ähnlicher GroupBox-Style  -->
    <Style x:Key="CardGroupBox" TargetType="GroupBox">
        <!--  Grundlayout analog zu "Card"  -->
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="12,10,12,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />

        <!--  Header wie SectionHeader  -->
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Margin="0,0,0,10"
                        FontWeight="Bold"
                        Foreground="White"
                        Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border
                        x:Name="Root"
                        Padding="14"
                        Background="#333333"
                        BorderBrush="#20FFFFFF"
                        BorderThickness="1"
                        CornerRadius="10"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!--  Header  -->
                            <ContentPresenter Grid.Row="0" ContentSource="Header" />

                            <!--  Inhalt  -->
                            <ContentPresenter
                                Grid.Row="1"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
